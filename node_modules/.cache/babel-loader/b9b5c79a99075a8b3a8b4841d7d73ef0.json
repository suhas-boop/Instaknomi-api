{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/shreyassheshagiri/Downloads/Blockchain-based-social-media-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/shreyassheshagiri/Downloads/Blockchain-based-social-media-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\n\nvar _objectWithoutProperties = require(\"/Users/shreyassheshagiri/Downloads/Blockchain-based-social-media-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _asyncToGenerator = require(\"/Users/shreyassheshagiri/Downloads/Blockchain-based-social-media-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/shreyassheshagiri/Downloads/Blockchain-based-social-media-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _awaitAsyncGenerator = require(\"/Users/shreyassheshagiri/Downloads/Blockchain-based-social-media-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/shreyassheshagiri/Downloads/Blockchain-based-social-media-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/Users/shreyassheshagiri/Downloads/Blockchain-based-social-media-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar CID = require('cids');\n\nvar Client = require('../../lib/core');\n\nvar Service = require('./service');\n\nvar toUrlSearchParams = require('../../lib/to-url-search-params');\n/**\n * @typedef {import('../../types').Options} Options\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').Pin} Pin\n * @typedef {import('ipfs-core-types/src/pin/remote').AddOptions} AddOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').Query} Query\n * @typedef {import('ipfs-core-types/src/pin/remote').Status} Status\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n\nvar Remote =\n/**\n * @param {Options} options\n */\nfunction Remote(options) {\n  _classCallCheck(this, Remote);\n\n  this.client = new Client(options);\n  /** @readonly */\n\n  this.service = new Service(options);\n};\n/**\n * @type {RemotePiningAPI[\"add\"]}\n */\n\n\nRemote.prototype.add =\n/*#__PURE__*/\nfunction () {\n  var _add = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(cid, _ref) {\n    var timeout, signal, headers, query, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            timeout = _ref.timeout, signal = _ref.signal, headers = _ref.headers, query = _objectWithoutProperties(_ref, [\"timeout\", \"signal\", \"headers\"]);\n            _context.next = 3;\n            return this.client.post('pin/remote/add', {\n              timeout: timeout,\n              signal: signal,\n              headers: headers,\n              searchParams: encodeAddParams(_objectSpread({\n                cid: cid\n              }, query))\n            });\n\n          case 3:\n            response = _context.sent;\n            _context.t0 = decodePin;\n            _context.next = 7;\n            return response.json();\n\n          case 7:\n            _context.t1 = _context.sent;\n            return _context.abrupt(\"return\", (0, _context.t0)(_context.t1));\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  function add(_x2, _x3) {\n    return _add.apply(this, arguments);\n  }\n\n  return add;\n}();\n/**\n * @type {RemotePiningAPI[\"ls\"]}\n */\n\n\nRemote.prototype.ls =\n/*#__PURE__*/\nfunction () {\n  var _ls = _wrapAsyncGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(_ref2) {\n    var timeout, signal, headers, query, response, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, pin;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            timeout = _ref2.timeout, signal = _ref2.signal, headers = _ref2.headers, query = _objectWithoutProperties(_ref2, [\"timeout\", \"signal\", \"headers\"]);\n            _context2.next = 3;\n            return _awaitAsyncGenerator(this.client.post('pin/remote/ls', {\n              timeout: timeout,\n              signal: signal,\n              headers: headers,\n              searchParams: encodeQuery(query)\n            }));\n\n          case 3:\n            response = _context2.sent;\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _context2.prev = 6;\n            _iterator = _asyncIterator(response.ndjson());\n\n          case 8:\n            _context2.next = 10;\n            return _awaitAsyncGenerator(_iterator.next());\n\n          case 10:\n            _step = _context2.sent;\n            _iteratorNormalCompletion = _step.done;\n            _context2.next = 14;\n            return _awaitAsyncGenerator(_step.value);\n\n          case 14:\n            _value = _context2.sent;\n\n            if (_iteratorNormalCompletion) {\n              _context2.next = 22;\n              break;\n            }\n\n            pin = _value;\n            _context2.next = 19;\n            return decodePin(pin);\n\n          case 19:\n            _iteratorNormalCompletion = true;\n            _context2.next = 8;\n            break;\n\n          case 22:\n            _context2.next = 28;\n            break;\n\n          case 24:\n            _context2.prev = 24;\n            _context2.t0 = _context2[\"catch\"](6);\n            _didIteratorError = true;\n            _iteratorError = _context2.t0;\n\n          case 28:\n            _context2.prev = 28;\n            _context2.prev = 29;\n\n            if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n              _context2.next = 33;\n              break;\n            }\n\n            _context2.next = 33;\n            return _awaitAsyncGenerator(_iterator.return());\n\n          case 33:\n            _context2.prev = 33;\n\n            if (!_didIteratorError) {\n              _context2.next = 36;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 36:\n            return _context2.finish(33);\n\n          case 37:\n            return _context2.finish(28);\n\n          case 38:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this, [[6, 24, 28, 38], [29,, 33, 37]]);\n  }));\n\n  function ls(_x) {\n    return _ls.apply(this, arguments);\n  }\n\n  return ls;\n}();\n/**\n * @type {RemotePiningAPI[\"rm\"]}\n */\n\n\nRemote.prototype.rm =\n/*#__PURE__*/\nfunction () {\n  var _rm = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(_ref3) {\n    var timeout, signal, headers, query;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            timeout = _ref3.timeout, signal = _ref3.signal, headers = _ref3.headers, query = _objectWithoutProperties(_ref3, [\"timeout\", \"signal\", \"headers\"]);\n            _context3.next = 3;\n            return this.client.post('pin/remote/rm', {\n              timeout: timeout,\n              signal: signal,\n              headers: headers,\n              searchParams: encodeQuery(_objectSpread({}, query, {\n                all: false\n              }))\n            });\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n\n  function rm(_x4) {\n    return _rm.apply(this, arguments);\n  }\n\n  return rm;\n}();\n/**\n * @type {RemotePiningAPI[\"rmAll\"]}\n */\n\n\nRemote.prototype.rmAll =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(_ref4) {\n    var timeout, signal, headers, query;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            timeout = _ref4.timeout, signal = _ref4.signal, headers = _ref4.headers, query = _objectWithoutProperties(_ref4, [\"timeout\", \"signal\", \"headers\"]);\n            _context4.next = 3;\n            return this.client.post('pin/remote/rm', {\n              timeout: timeout,\n              signal: signal,\n              headers: headers,\n              searchParams: encodeQuery(_objectSpread({}, query, {\n                all: true\n              }))\n            });\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, this);\n  }));\n\n  return function (_x5) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n/**\n * @param {Object} json\n * @param {string} json.Name\n * @param {string} json.Cid\n * @param {Status} json.Status\n * @returns {Pin}\n */\n\n\nvar decodePin = function decodePin(_ref6) {\n  var name = _ref6.Name,\n      status = _ref6.Status,\n      cid = _ref6.Cid;\n  return {\n    cid: new CID(cid),\n    name: name,\n    status: status\n  };\n};\n/**\n * @param {any} service\n * @returns {string}\n */\n\n\nvar encodeService = function encodeService(service) {\n  if (typeof service === 'string' && service !== '') {\n    return service;\n  } else {\n    throw new TypeError('service name must be passed');\n  }\n};\n/**\n * @param {any} cid\n * @returns {string}\n */\n\n\nvar encodeCID = function encodeCID(cid) {\n  if (CID.isCID(cid)) {\n    return cid.toString();\n  } else {\n    throw new TypeError(\"CID instance expected instead of \".concat(cid));\n  }\n};\n/**\n * @param {Query & { all?: boolean }} query\n * @returns {URLSearchParams}\n */\n\n\nvar encodeQuery = function encodeQuery(_ref7) {\n  var service = _ref7.service,\n      cid = _ref7.cid,\n      name = _ref7.name,\n      status = _ref7.status,\n      all = _ref7.all;\n  var query = toUrlSearchParams({\n    service: encodeService(service),\n    name: name,\n    force: all ? true : undefined\n  });\n\n  if (cid) {\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = cid[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var value = _step2.value;\n        query.append('cid', encodeCID(value));\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n  }\n\n  if (status) {\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n      for (var _iterator3 = status[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n        var _value2 = _step3.value;\n        query.append('status', _value2);\n      }\n    } catch (err) {\n      _didIteratorError3 = true;\n      _iteratorError3 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n          _iterator3.return();\n        }\n      } finally {\n        if (_didIteratorError3) {\n          throw _iteratorError3;\n        }\n      }\n    }\n  }\n\n  return query;\n};\n/**\n * @param {AddOptions & {cid:CID}} options\n * @returns {URLSearchParams}\n */\n\n\nvar encodeAddParams = function encodeAddParams(_ref8) {\n  var cid = _ref8.cid,\n      service = _ref8.service,\n      background = _ref8.background,\n      name = _ref8.name,\n      origins = _ref8.origins;\n  var params = toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name: name,\n    background: background ? true : undefined\n  });\n\n  if (origins) {\n    var _iteratorNormalCompletion4 = true;\n    var _didIteratorError4 = false;\n    var _iteratorError4 = undefined;\n\n    try {\n      for (var _iterator4 = origins[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n        var origin = _step4.value;\n        params.append('origin', origin.toString());\n      }\n    } catch (err) {\n      _didIteratorError4 = true;\n      _iteratorError4 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n          _iterator4.return();\n        }\n      } finally {\n        if (_didIteratorError4) {\n          throw _iteratorError4;\n        }\n      }\n    }\n  }\n\n  return params;\n};\n\nmodule.exports = Remote;","map":null,"metadata":{},"sourceType":"script"}