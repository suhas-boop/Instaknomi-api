{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/shreyassheshagiri/Downloads/Blockchain-based-social-media-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/shreyassheshagiri/Downloads/Blockchain-based-social-media-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\n\nvar _asyncToGenerator = require(\"/Users/shreyassheshagiri/Downloads/Blockchain-based-social-media-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar CID = require('cids');\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {ObjectAPI[\"new\"]}\n   */\n  function newObject() {\n    return _newObject.apply(this, arguments);\n  }\n\n  function _newObject() {\n    _newObject = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var options,\n          res,\n          _ref,\n          Hash,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              _context.next = 3;\n              return api.post('object/new', {\n                timeout: options.timeout,\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: options.template\n                }, options)),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              _ref = _context.sent;\n              Hash = _ref.Hash;\n              return _context.abrupt(\"return\", new CID(Hash));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _newObject.apply(this, arguments);\n  }\n\n  return newObject;\n});","map":null,"metadata":{},"sourceType":"script"}