{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/shreyassheshagiri/Downloads/Blockchain-based-social-media-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/shreyassheshagiri/Downloads/Blockchain-based-social-media-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar DAGLink = require('../dag-link/dagLink');\n\nvar genCid = require('../genCid');\n/**\n * toDAGLink converts a DAGNode to a DAGLink\n *\n * @typedef {import('../genCid').GenCIDOptions} GenCIDOptions\n *\n * @typedef {object} ToDagLinkExtraOptions\n * @property {string} [name]\n *\n * @typedef {GenCIDOptions & ToDagLinkExtraOptions} ToDagLinkOptions\n *\n * @param {import('./dagNode')} node\n * @param {ToDagLinkOptions} options\n */\n\n\nvar toDAGLink =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(node) {\n    var options,\n        buf,\n        nodeCid,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            buf = node.serialize();\n            _context.next = 4;\n            return genCid.cid(buf, options);\n\n          case 4:\n            nodeCid = _context.sent;\n            return _context.abrupt(\"return\", new DAGLink(options.name || '', node.size, nodeCid));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function toDAGLink(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = toDAGLink;","map":null,"metadata":{},"sourceType":"script"}